@use 'sass:meta';
@use '../variables' as *;
// stylelint-disable declaration-no-important

@layer utilities {
  $spacer: 1rem;
  $spacers: (
    0: 0,
    1: $spacer * 0.25,
    2: $spacer * 0.5,
    3: $spacer,
    4: $spacer * 1.5,
    5: $spacer * 3,
    auto: auto,
  );
  $breakpoints: (
    xs: null,
    sm: 'min-width: 576px',
    md: 'min-width: 768px',
    lg: 'min-width: 992px',
    xl: 'min-width: 1200px',
    xxl: 'min-width: 1400px',
  );
  $sides: (
    null: '',
    t: 'top',
    b: 'bottom',
    s: 'left',
    e: 'right',
    x: (
      'left',
      'right',
    ),
    y: (
      'top',
      'bottom',
    ),
  );

  @each $bp, $media in $breakpoints {
    @each $prop in (m, p) {
      $css-prop: if($prop == m, margin, padding);

      @each $side, $dirs in $sides {
        @each $size, $value in $spacers {
          $class: if(
            $bp == xs or $bp == null,
            '.#{$prop}#{$side}-#{$size}',
            '.#{$prop}#{$side}-#{$bp}-#{$size}'
          );

          @if $media {
            @media (#{$media}) {
              #{$class} {
                @if meta.type-of($dirs) == 'list' {
                  @each $dir in $dirs {
                    #{$css-prop}-#{$dir}: $value !important;
                  }
                } @else {
                  #{$css-prop}-#{$dirs}: $value !important;
                }
              }
            }
          } @else {
            #{$class} {
              @if meta.type-of($dirs) == 'list' {
                @each $dir in $dirs {
                  #{$css-prop}-#{$dir}: $value !important;
                }
              } @else {
                #{$css-prop}-#{$dirs}: $value !important;
              }
            }
          }
        }
      }
    }
  }
}
