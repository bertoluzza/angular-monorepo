@use 'sass:color';
@use 'sass:math';
@use 'sass:map';
@use 'sass:string';
@use 'sass:meta';

/// It converts the specified pixel size to rem. The result include 'rem'.
/// @param {number} $px
///   The pixels to convert to rem. This could be a unitless number (e.g. 10) or a number (e.g. 10px).
/// @return {number} `$px` converted to rem and adding `$add`.
@function to-rem($px) {
  $rem-size: math.div(strip-unit($px), 16);

  @return $rem-size * 1rem;
}

/// It removes the unit from the specified size and return the result.
/// @param {number} $number
///    The number from which the unit should be stripped.
/// @returns {number} `$number` without the unit.
@function strip-unit($number) {
  @if is-number($number) and not math.is-unitless($number) {
    @return math.div($number, $number * 0 + 1);
  }

  @return $number;
}

/// It returns a value which specifies if the provided value is a number.
/// @param {any} $value
///    The value to check.
/// @returns {boolean} true if `$value` is a number, otherwise false.
@function is-number($value) {
  @return meta.type-of($value) == 'number';
}
